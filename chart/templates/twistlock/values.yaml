{{- if .Values.twistlock.enabled }}
{{- include "values-secret" (dict "root" $ "package" .Values.twistlock "name" "twistlock" "defaults" (include "bigbang.defaults.twistlock" .)) }}
{{- end }}

{{- define "bigbang.defaults.twistlock" -}}
{{ $istioEnabled := false }}
{{- range $values := .Values.istios }}{{ if and ($values.enabled) (eq $istioEnabled false) }}{{ $istioEnabled = true }}{{- end }}
{{- end -}}
hostname: {{ .Values.hostname }}

openshift: {{ .Values.openshift }}

prometheus:
  servicemonitor:
    enabled: {{ .Values.monitoring.enabled }}

imagePullSecrets:
- name: private-registry

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  ingressLabels:
    {{- range $name, $values := .Values.istios }}
    {{- $gateway := default "public" $.Values.kiali.ingress.gateway }}
    {{- $default := dict "app" (dig "gateways" $gateway "ingressGateway" nil $values) "istio" nil }}
    {{- toYaml (dig "values" "gateways" $gateway "selector" $default $values) | nindent 4 }}
    {{- end -}}

istio:
  enabled: {{ $istioEnabled }}
  console:
    gateways:
    - istio-system/{{ default "public" .Values.twistlock.ingress.gateway }}

{{- end -}}
