{{- if .Values.jaeger.enabled }}
{{- include "values-secret" (dict "root" $ "package" .Values.jaeger "name" "jaeger" "defaults" (include "bigbang.defaults.jaeger" .)) }}
{{- end }}

{{- define "bigbang.defaults.jaeger" -}}
{{ $istioEnabled := false }}
{{- range $values := .Values.istios }}{{ if and ($values.enabled) (eq $istioEnabled false) }}{{ $istioEnabled = true }}{{- end }}
{{- end -}}
imagePullSecrets:
  - name: private-registry
hostname: {{ .Values.hostname }}
istio:
  enabled: {{ $istioEnabled }}
  jaeger:
    gateways:
    - istio-system/{{ default "public" .Values.jaeger.ingress.gateway }}

monitoring:
  enabled: {{ .Values.monitoring.enabled }}
elasticsearch:
  enabled: {{ .Values.logging.enabled }}
jaeger:
  spec:
    allInOne:
      labels:
        protect: keycloak
    query:
      labels:
        protect: keycloak
openshift:
  enabled: {{ .Values.openshift }}
networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  controlPlaneCidr: {{ .Values.networkPolicies.controlPlaneCidr }}
  ingressLabels:
    {{- range $name, $values := .Values.istios }}
    {{- $gateway := default "public" $.Values.kiali.ingress.gateway }}
    {{- $default := dict "app" (dig "gateways" $gateway "ingressGateway" nil $values) "istio" nil }}
    {{- toYaml (dig "values" "gateways" $gateway "selector" $default $values) | nindent 4 }}
    {{- end -}}
{{- end -}}